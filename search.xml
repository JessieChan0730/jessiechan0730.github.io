<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>记录unocss一个小问题</title>
      <link href="/2025/06/29/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
      <url>/2025/06/29/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="1-简介❓"><a href="#1-简介❓" class="headerlink" title="1. 简介❓"></a>1. 简介❓</h2><p>最近项目用到了unocss作为css框架，unocsss是一个原子 CSS 引擎，在模板中就可以编写对应的css样式用起来还是比较方便，这里是官方文档：<a href="https://unocss.nodejs.cn/">https://unocss.nodejs.cn</a></p><h2 id="2-问题描述😁"><a href="#2-问题描述😁" class="headerlink" title="2. 问题描述😁"></a>2. 问题描述😁</h2><h3 id="2-1-准备"><a href="#2-1-准备" class="headerlink" title="2.1 准备"></a>2.1 准备</h3><p>下面是一个简单的按钮组件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">flex</span>=<span class="string">&quot;~&quot;</span> <span class="attr">cursor-pointer</span> <span class="attr">w-full</span> <span class="attr">h-full</span> <span class="attr">justify-center</span> <span class="attr">items-center</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">w-85px</span> <span class="attr">h-30px</span> <span class="attr">border-0</span> <span class="attr">text-center</span> <span class="attr">rounded-2px</span> <span class="attr">text</span>=<span class="string">&quot;14px #fff&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bg-#6495ED&quot;</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> props = defineProps&lt;&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">text</span>: string,</span></span><br><span class="line"><span class="language-javascript">&#125;&gt;()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中使用unocss定义了宽，高以及背景等等。在props中我们接受了一个text来作为按钮中的文字显示，我们可以这么使用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Button</span> <span class="attr">text</span>=<span class="string">&quot;hello world&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果大致如下，很简单的一个效果：<br><img src="/../image/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/image-1.png" alt="按钮图片"></p><h3 id="2-2-新需求"><a href="#2-2-新需求" class="headerlink" title="2.2 新需求"></a>2.2 新需求</h3><p>现在我希望这个按钮组件定制化程度更高，比如，允许用户自定义它的背景颜色，那么我们很快可以想到可以让用户传入一个props，我们将组件修改至如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">flex</span>=<span class="string">&quot;~&quot;</span> <span class="attr">w-full</span> <span class="attr">h-full</span> <span class="attr">justify-center</span> <span class="attr">items-center</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;w-85px h-30px border-0 text-center rounded-2px&quot;</span> <span class="attr">text</span>=<span class="string">&quot;14px #fff&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[bgColor ? `bg-$&#123;bgColor&#125;` : &#x27;bg-#6495ED&#x27;, &#x27;cursor-pointer&#x27;]&quot;</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> props = defineProps&lt;&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">text</span>: string,</span></span><br><span class="line"><span class="language-javascript">    bgColor?: string</span></span><br><span class="line"><span class="language-javascript">&#125;&gt;()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们允许接受一个<code>bgColor</code>的props，并且在接收到后将其传到模板中，动态拼接出一个bg-${bgColor}的类名，比如用于传递的是”#fff”，那么此处拼接的就是<code>bg-#fff</code>，那么我们尝试：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">text</span>=<span class="string">&quot;hello world&quot;</span> <span class="attr">bg-color</span>=<span class="string">&quot;#f40&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>此时发现，按钮居然没有变为红色(#f40)：<br><img src="/../image/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/image-2.png" alt="无效"><br>你可能认为是不是类没有添加上去？但实际上是生成了：<br><img src="/../image/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/image-3.png" alt="类名"><br>如果我们不使用props，而是直接在组件内拼接呢？例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">flex</span>=<span class="string">&quot;~&quot;</span> <span class="attr">w-full</span> <span class="attr">h-full</span> <span class="attr">justify-center</span> <span class="attr">items-center</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;w-85px h-30px border-0 text-center rounded-2px&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;`bg-$&#123;bgColor&#125;`&quot;</span> <span class="attr">text</span>=<span class="string">&quot;14px #fff&quot;</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> props = defineProps&lt;&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">text</span>: string,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// bgColor: string</span></span></span><br><span class="line"><span class="language-javascript">&#125;&gt;()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span>  bgColor = <span class="title function_">ref</span>(<span class="string">&quot;#f40&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们发现同样是无效的：<br><img src="/../image/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/image-5.png" alt="无效"><br>如果我们手动写死呢，这个时候就有效了：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;w-85px h-30px border-0 text-center rounded-2px bg-#f40&quot;</span> <span class="attr">text</span>=<span class="string">&quot;14px #fff&quot;</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../image/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/image-4.png" alt="有效"><br>你以为结束了？假设此时我们重新回到第一步, 回归到通过props传递背景色：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Button.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">flex</span>=<span class="string">&quot;~&quot;</span> <span class="attr">w-full</span> <span class="attr">h-full</span> <span class="attr">justify-center</span> <span class="attr">items-center</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;w-85px h-30px border-0 text-center rounded-2px&quot;</span> <span class="attr">text</span>=<span class="string">&quot;14px #fff&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[bgColor ? `bg-$&#123;bgColor&#125;` : &#x27;bg-#6495ED&#x27;, &#x27;cursor-pointer&#x27;]&quot;</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- App.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">text</span>=<span class="string">&quot;hello world&quot;</span> <span class="attr">bg-color</span>=<span class="string">&quot;#f40&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>此时你会惊讶的发现，通过props传递的颜色值，居然有效了，并且不管是刷新还是重启项目都没问题：<br><img src="/../image/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/image-6.png" alt="有效"><br>此时我再换个传递的颜色呢？</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">text</span>=<span class="string">&quot;hello world&quot;</span> <span class="attr">bg-color</span>=<span class="string">&quot;green&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>然后又寄掉，传递拼接的背景色又无效了：<br><img src="/../image/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/image-7.png" alt="无效"></p><h3 id="2-3-结论"><a href="#2-3-结论" class="headerlink" title="2.3 结论"></a>2.3 结论</h3><p>这个问题本质上是 UnoCSS 的原子类生成机制 导致的。UnoCSS（和 WindiCSS、Tailwind JIT 类似）会在编译时扫描你的源码，只生成源码中静态出现过的类名。<br>当你用字符串拼接（如 bg-${bgColor}）动态生成类名时，UnoCSS 在编译阶段无法“看到”这些动态类名，因此不会生成对应的 CSS，导致样式无效<code>（生没生成可以通过：localhost:5173/__unocss 查看）</code><br>具体表现如下：</p><ol><li>静态写死的类名（如 bg-#f40）能被 UnoCSS 检测到，样式有效。</li><li>动态拼接的类名（如 bg-${bgColor}），如果 bgColor 是变量，UnoCSS 检测不到，样式无效。</li><li>某些情况下（如 props 传递），如果你传递的值恰好和源码中静态出现过的类名一致，可能会“碰巧”有效，但换成没出现过的值就无效。</li></ol><h2 id="3-解决方案🔨"><a href="#3-解决方案🔨" class="headerlink" title="3. 解决方案🔨"></a>3. 解决方案🔨</h2><h3 id="3-1-Safelist（白名单）"><a href="#3-1-Safelist（白名单）" class="headerlink" title="3.1 Safelist（白名单）"></a>3.1 Safelist（白名单）</h3><p>在 UnoCSS 配置中用 safelist 明确列出你可能会用到的动态类名，UnoCSS 就会生成这些类的样式，例如：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// uno.config.ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">safelist</span>: [</span><br><span class="line">    <span class="string">&#x27;bg-#f40&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;bg-green&#x27;</span>,</span><br><span class="line">    <span class="comment">// 你可能会用到的所有颜色</span></span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>结果：<br><img src="/../image/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/image-8.png" alt="成功"><br>但是这种方案并不适合我们，用户传递的颜色我们并不知情，所以不太可能将所有颜色例入到<code>safelist</code>，还有一种方案是通过正则表达式，提前生成所有的样式，但是体积和性能会大幅度受到影响，所以不建议：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">safelist</span>: [</span><br><span class="line">  <span class="regexp">/^bg-\w+$/</span>, <span class="comment">// 生成所有 bg-xxx 的样式（注意性能和体积）</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="3-2-手动生成样式"><a href="#3-2-手动生成样式" class="headerlink" title="3.2 手动生成样式"></a>3.2 手动生成样式</h3><p>既然 unocss 无法自动帮我们生成的样式，不妨我们自己来生成，代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Button.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">flex</span>=<span class="string">&quot;~&quot;</span> <span class="attr">w-full</span> <span class="attr">h-full</span> <span class="attr">justify-center</span> <span class="attr">items-center</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; &#x27;--bg-color&#x27;: bgColor &#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;w-85px h-30px border-0 text-center rounded-2px&quot;</span> <span class="attr">text</span>=<span class="string">&quot;14px #fff&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:class</span>=<span class="string">&quot;[bgColor ? &#x27;cus-btn-bg&#x27; : &#x27;bg-#6495ED&#x27;, &#x27;cursor-pointer&#x27;]&quot;</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> props = defineProps&lt;&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">text</span>: string,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">bgColor</span>: string</span></span><br><span class="line"><span class="language-javascript">&#125;&gt;()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.cus-btn-bg</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--bg-color);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- App.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">text</span>=<span class="string">&quot;hello world&quot;</span> <span class="attr">bg-color</span>=<span class="string">&quot;green&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>这里的道理很简单，我们在style中定义一个<code>css变量</code>，将bgColor作为这个变量的值，然后在style标签中，我们自定义一个<code>cus-btn-bg</code>样式，并且引用了<code>--bg-color</code>这个css变量，这样就可以手动生成了，效果如下：<br><img src="/../image/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/image-9.png" alt="成功"></p><h2 id="4-备注🤔"><a href="#4-备注🤔" class="headerlink" title="4. 备注🤔"></a>4. 备注🤔</h2><h3 id="4-1-查看对应文件生成的样式"><a href="#4-1-查看对应文件生成的样式" class="headerlink" title="4.1 查看对应文件生成的样式"></a>4.1 查看对应文件生成的样式</h3><p>我们可以通过 <a href="http://localhost:5173/__unocss">http://localhost:5173/__unocss</a> 来查看每个vue文件生成的样式：<br><img src="/../image/%E8%AE%B0%E5%BD%95unocss%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/image-10.png" alt="alt text"><br>可以看到 Button.vue 这个文件已经生成了bg-#f40、bg-green等，所以我们第二步的时候，突然发现拼接动态类名有效了。</p><h3 id="4-2-相关问题"><a href="#4-2-相关问题" class="headerlink" title="4.2 相关问题"></a>4.2 相关问题</h3><p>貌似还有个icon动态拼接的问题，issue我放在，下面感兴趣的可以去看看：<br><a href="https://github.com/unocss/unocss/issues/801">https://github.com/unocss/unocss/issues/801</a></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> vue </tag>
            
            <tag> unocss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何将ubuntu安装到移动硬盘？</title>
      <link href="/2025/06/08/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%EF%BC%9F/"/>
      <url>/2025/06/08/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="1-介绍❓"><a href="#1-介绍❓" class="headerlink" title="1. 介绍❓"></a>1. 介绍❓</h2><p>本人因为工作需要，开发时需要使用Linux环境，但是由于本人使用的笔记本，系统用的是Windows，使用双系统的话需要格式化掉我的一个本地硬盘，数据迁移量大。所以想着能不能将Ubuntu安装到移动硬盘中。答案是肯定可以的。这里我就是使用Ubuntu这个发行版了，比较适合入门新手。😁</p><h2 id="2-准备🔨"><a href="#2-准备🔨" class="headerlink" title="2. 准备🔨"></a>2. 准备🔨</h2><p>既然是安装到移动硬盘那么移动硬盘就很重要了，最好选择固态硬盘，容量可以选择512G或者1T够用即可。读写速度可以根据你电脑的接口速度来确定，例如我的电脑：</p><table><thead><tr><th align="left">接口位置</th><th align="left">类型</th><th align="left">协议版本</th><th align="left">功能说明</th></tr></thead><tbody><tr><td align="left"><strong>左侧</strong></td><td align="left">USB 3.2 Gen1 Type-A</td><td align="left">5Gbps</td><td align="left">连接键鼠&#x2F;U盘</td></tr><tr><td align="left"></td><td align="left">USB 3.2 Gen2 Type-C</td><td align="left">10Gbps</td><td align="left">支持DP 1.4输出 + 100W PD充电</td></tr><tr><td align="left"></td><td align="left">USB 3.2 Gen2 Type-C</td><td align="left">10Gbps (USB 4.0)*</td><td align="left">集显输出&#x2F;高速数据传输</td></tr><tr><td align="left"><strong>右侧</strong></td><td align="left">USB 3.2 Gen1 Type-A</td><td align="left">5Gbps</td><td align="left">外接设备扩展</td></tr></tbody></table><p>按照理论速度10Gbps的速度可以达到 <strong>1,250 MB&#x2F;s</strong>，故我选择了<strong>1050MB&#x2F;s</strong>读写速度的硬盘。那么大致需要准备的东西如下：</p><ol><li>联想拯救者移动硬盘（大小512G、1050Mb&#x2F;s的读写速度）</li><li>ios镜像文件（ubuntu-24.04.1-desktop-amd64.iso）</li><li>VMware Workstation Pro（不想使用U盘制作启动盘，使用虚拟机更加方便）</li><li>DiskGenius（硬盘分区管理软件）</li></ol><h2 id="3-开始安装🚀"><a href="#3-开始安装🚀" class="headerlink" title="3. 开始安装🚀"></a>3. 开始安装🚀</h2><h3 id="1-首先安装DiskGenius和VM虚拟机，下载链接如下："><a href="#1-首先安装DiskGenius和VM虚拟机，下载链接如下：" class="headerlink" title="1. 首先安装DiskGenius和VM虚拟机，下载链接如下："></a>1. 首先安装<strong>DiskGenius</strong>和VM虚拟机，下载链接如下：</h3><p><a href="https://www.diskgenius.cn/download.php">https://www.diskgenius.cn/download.php</a><br><a href="https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion">https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion</a></p><h3 id="2-使用DiskGenius"><a href="#2-使用DiskGenius" class="headerlink" title="2. 使用DiskGenius"></a>2. 使用DiskGenius</h3><p>双击打开软件，点击将要用到的硬盘，然后可以看到右侧的磁盘分区情况。右键硬盘名称，点击“转换分区表类型为GUID格式”，如果已经是灰色那么略过这步：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-1.png" alt="转换分区表类型为GUID格式">  </p><h3 id="3-开始分区"><a href="#3-开始分区" class="headerlink" title="3. 开始分区"></a>3. 开始分区</h3><p>我们右键顶层空闲分区，如果是蓝色的NTFS，在备份了重要数据的前提下，则需要清空分区或者格式化后，点击新建分区：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-2.png" alt="新建分区">  </p><ol><li>efi分区：主磁盘分区，文件系统类型为FAT32，分区大小1GB（推荐设置），卷标efi，用于存放Ubuntu系统的启动引导，特别重要<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-3.png" alt="引导分区">  </li><li>swap区：主磁盘分区，文件系统类型Linux swap partition，分区大小32GB(类似于Window的虚拟内存，一般和自己电脑内存差不多大小即可)<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-4.png" alt="交换分区">  </li><li>&#x2F;区：主磁盘分区，文件系统类型Ext4（Linux Data），分区大小自设，相当于Windows中的C盘（我这里设置138G），卷标 &#x2F;<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-5.png" alt="根分区">  </li><li>&#x2F;home区：主磁盘分区，文件系统类型Ext4（Linux Data），分区大小自动设置剩余大小，卷标 &#x2F;home（我这里设置为305GB）<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-6.png" alt="home分区">  </li><li>分好之后我们点击左上角的保存更改，确定即可，最终分区如下：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-7.png" alt="保存分区"></li></ol><h3 id="4-设置虚拟机"><a href="#4-设置虚拟机" class="headerlink" title="4. 设置虚拟机"></a>4. 设置虚拟机</h3><p>双击启动虚拟机软件之后，我们点击新建虚拟机，这一步我们选择稍后安装操作系统：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-8.png" alt="新建虚拟机"><br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-9.png" alt="新建虚拟机"><br>处理器数量我选择2、内核数量我选择2、内存大小选择8G、网络使用NAT、SCSI控制器选择 LSI Logic、磁盘类型选择SCSI、创建新的磁盘，大小20GB左右即可。在自定义硬件中我们需要将下载好的iso镜像导入：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-10.png" alt="设置虚拟机"><br>选择自定义硬件，选择新的CD&#x2F;DVD -&gt;  右侧选择使用iso映像文件 -&gt; 点击浏览按钮选择你刚刚下载好的iso镜像文件：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-11.png" alt="选择iso镜像"><br>接下来需要查看自己的主板是否是UEFI：Windows使用 win + r，输入 msinfo32 后回车，如果启动模式是 UEFI：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-12.png" alt="查看启动模式"><br>那么在虚拟机中我们需要，右键虚拟机选择设置 -&gt; 进入选项 tab 栏目 -&gt; 点击高级 -&gt; 更改固件类型为 UEFI：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-13.png" alt="更改固件类型"><br><strong>这一步很重要，它决定了你等下在虚拟机中安装，能否创建 efi 分区以及在进入bios界面后能否看到用移动硬盘作为启动盘。</strong></p><h3 id="5-启动虚拟机"><a href="#5-启动虚拟机" class="headerlink" title="5. 启动虚拟机"></a>5. 启动虚拟机</h3><p>进入系统选择 Try or install Ubuntu：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-14.png" alt="启动虚拟机"><br>为了让硬盘连接到虚拟机中，我们需要选择工具栏虚拟机选项 -&gt; 可移动设备 -&gt; 找到自己的移动硬盘 -&gt; 选择断开与主机的连接：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-15.png" alt="硬盘连接虚拟机"><br>进入系统后，我们选择 Try Ubuntu 随后点击关闭按钮：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-16.png" alt="Try Ubuntu">  </p><p>随后我们可以通过Ubuntu自带的磁盘查看工具查看我们移动硬盘分区是否正确。<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-17.png" alt="查看分区"><br>无误之后即可点击图标进行安装了：<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-18.png" alt="开始安装"><br>安装的过程就比较简单了，我这里就不放太多图，口头描述了：<br>语言选择 中文 -&gt; 键盘布局选择汉语 -&gt;  连接到互联网选择有线连接 -&gt; 安装现在选择<strong>交互安装</strong> -&gt; 应用选择<strong>默认集合</strong>即可 -&gt; 安装<strong>专有软件</strong>可以都勾选上 -&gt;  分区选择手动分区:<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-19.png" alt="选择移动硬盘"><br><strong>！！注意这里左下角的用于安装引导程序的设备切记选择我们的移动硬盘，也就是是上面我们分好区的硬盘</strong><br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/image-20.png" alt="选择移动硬盘"><br>我这里是sdb，由于我们已经提前分好区了可以点击下一步即可，如果下一步按钮为灰色，那么在列表中选择你的移动硬盘，选择左下角的新建分区表即可,此时可以重新进行分区，<strong>记住一定要有 &#x2F;boot&#x2F;efi 分区，否则等下进入bios是看不到启动项的</strong>，文件类型为 VFAT 即可大小可以为 1GB。<br>分区完成后下一步输入你的用户名和密码 -&gt;  后面即可开始安装。如果安装失败有可能是网络原因造成的，可以选择重启虚拟机，然后重新开始安装。<br>安装成功后关闭虚拟机，重新我们的电脑，当电脑进入加载界面时候，可以狂按f2(我的电脑是f2有的是shift，根据自己电脑的型号进行操作)，如果此时发现启动项目中有你的移动硬盘，那么恭喜你安装成功了，现在只需要将移动硬盘作为第一个启动项即可。<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/UEFI.jpg" alt="UEFI"><br>选择保存，随后启动，安装成功！！！<br><img src="/../image/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E5%AE%89%E8%A3%85%E5%88%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/success.jpg" alt="安装成功">  </p><h2 id="4-总结😁"><a href="#4-总结😁" class="headerlink" title="4. 总结😁"></a>4. 总结😁</h2><p>本教程介绍了如何将Ubuntu安装到移动硬盘，相比于直接安装双系统来讲，移动硬盘安装的优点是方便携带，不会影响主机的操作系统和数据。缺点的话就是速度会比较慢，有时候会有点卡。上述教程中需要注意的就是UEFI，一定要有 &#x2F;boot&#x2F;efi 分区，bios才会识别移动硬盘为一个启动项，其余过程还是比较简单的。</p><h2 id="5-参考📖"><a href="#5-参考📖" class="headerlink" title="5. 参考📖"></a>5. 参考📖</h2><p><a href="https://blog.csdn.net/qq_52034548/article/details/131581118">https://blog.csdn.net/qq_52034548/article/details/131581118</a><br><a href="https://www.bilibili.com/video/BV1tb4y1u77k/?spm_id_from=333.337.search-card.all.click&vd_source=80c48eb8096923ff73f7da8cccd53074">https://www.bilibili.com/video/BV1tb4y1u77k/?spm_id_from=333.337.search-card.all.click&amp;vd_source=80c48eb8096923ff73f7da8cccd53074</a><br><a href="https://www.bilibili.com/video/BV1mh4y1a76v/?spm_id_from=333.337.search-card.all.click&vd_source=80c48eb8096923ff73f7da8cccd53074">https://www.bilibili.com/video/BV1mh4y1a76v/?spm_id_from=333.337.search-card.all.click&amp;vd_source=80c48eb8096923ff73f7da8cccd53074</a></p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2025/05/31/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2025/05/31/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><p>这是我的第一篇博客，也是我尝试改变世界的开始😎</p>]]></content>
      
      
      <categories>
          
          <category> 闲聊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
